<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Wavelength Community Forum</title>
    
    <!-- Reuse existing styles -->
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/carousel.css">
    <link rel="stylesheet" href="/css/forum.css">
    
    <!-- Firebase SDK - Direct imports for better compatibility -->
    <script type="module">
      import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.7.0/firebase-app.js';
      import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged, setPersistence, browserLocalPersistence } from 'https://www.gstatic.com/firebasejs/10.7.0/firebase-auth.js';
      import { getDatabase, ref, push, set, onValue, query, orderByChild } from 'https://www.gstatic.com/firebasejs/10.7.0/firebase-database.js';
      
      // Initialize Firebase with your existing config
      const firebaseConfig = {
        apiKey: "<%= process.env.API_KEY %>",
        authDomain: "<%= process.env.AUTH_DOMAIN %>",
        databaseURL: "<%= process.env.DATABASE_URL %>",
        projectId: "<%= process.env.PROJECT_ID %>",
        storageBucket: "<%= process.env.STORAGE_BUCKET %>",
        messagingSenderId: "<%= process.env.MESSAGING_SENDER_ID %>",
        appId: "<%= process.env.APP_ID %>"
      };
      
      console.log('üî• Initializing Firebase for forum...');
      
      const app = initializeApp(firebaseConfig);
      const auth = getAuth(app);
      const database = getDatabase(app);
      
      // Configure Firebase Auth persistence for 2-week sessions
      setPersistence(auth, browserLocalPersistence).then(() => {
        console.log('‚úÖ Firebase Auth persistence set to LOCAL for extended sessions');
        
        // Custom session manager for 2-week duration
        window.sessionManager = {
          // 2 weeks in milliseconds
          SESSION_DURATION: 14 * 24 * 60 * 60 * 1000,
          
          // Check if session is valid
          isSessionValid: function() {
            const lastActivity = localStorage.getItem('wavelength_last_activity');
            if (!lastActivity) return false;
            
            const now = Date.now();
            const timeSinceActivity = now - parseInt(lastActivity);
            return timeSinceActivity < this.SESSION_DURATION;
          },
          
          // Update session activity
          updateActivity: function() {
            localStorage.setItem('wavelength_last_activity', Date.now().toString());
          },
          
          // Clear expired session
          clearExpiredSession: function() {
            if (!this.isSessionValid()) {
              localStorage.removeItem('wavelength_last_activity');
              auth.signOut();
              return true;
            }
            return false;
          },
          
          // Get remaining session time (for display purposes)
          getRemainingTime: function() {
            const lastActivity = localStorage.getItem('wavelength_last_activity');
            if (!lastActivity) return 0;
            
            const now = Date.now();
            const timeSinceActivity = now - parseInt(lastActivity);
            return Math.max(0, this.SESSION_DURATION - timeSinceActivity);
          },
          
          // Format remaining time for display
          formatRemainingTime: function() {
            const remaining = this.getRemainingTime();
            const days = Math.floor(remaining / (24 * 60 * 60 * 1000));
            const hours = Math.floor((remaining % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
            
            if (days > 0) {
              return `${days} day${days !== 1 ? 's' : ''}, ${hours} hour${hours !== 1 ? 's' : ''}`;
            } else if (hours > 0) {
              return `${hours} hour${hours !== 1 ? 's' : ''}`;
            } else {
              const minutes = Math.floor((remaining % (60 * 60 * 1000)) / (60 * 1000));
              return `${minutes} minute${minutes !== 1 ? 's' : ''}`;
            }
          }
        };
        
        // Check session validity on load
        window.sessionManager.clearExpiredSession();
        
        console.log('‚úÖ Session manager initialized for 2-week persistence');
        
      }).catch((error) => {
        console.error('‚ùå Failed to set Firebase persistence:', error);
      });
      
      // Make Firebase available globally for forum components
      window.firebaseAuth = auth;
      window.firebaseDB = database;
      window.firebaseUtils = { 
        signInWithPopup, 
        GoogleAuthProvider, 
        signOut, 
        onAuthStateChanged, 
        setPersistence, 
        browserLocalPersistence, 
        ref, 
        push, 
        set, 
        onValue, 
        query, 
        orderByChild 
      };
      
      console.log('‚úÖ Firebase initialized successfully for forum');
    </script>
    
    <!-- Forum JavaScript -->
    <script src="/js/forum.js" defer></script>
</head>
<body>
    <!-- Include existing navigation -->
    <%- include('../partials/head') %>
    
    <div class="forum-container">
        <!-- Forum Header -->
        <header class="forum-header">
            <div class="container">
                <div class="forum-header-content">
                    <div class="forum-branding">
                        <h1>
                            <span class="forum-icon">üéµ</span>
                            Wavelength Community Forum
                        </h1>
                        <p class="forum-tagline">Connect with fellow Wavelength fans</p>
                    </div>
                    
                    <div class="forum-auth">
                        <div id="forum-auth-container">
                            <!-- Auth buttons will be inserted here by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </header>
        
        <!-- Forum Navigation -->
        <nav class="forum-nav">
            <div class="container">
                <ul class="forum-nav-list">
                    <li><a href="/forum" class="<%= currentPage === 'home' ? 'active' : '' %>">üè† Home</a></li>
                    <li><a href="/forum/recent" class="<%= currentPage === 'recent' ? 'active' : '' %>">üïí Recent Posts</a></li>
                    <li><a href="/forum/popular" class="<%= currentPage === 'popular' ? 'active' : '' %>">üî• Popular</a></li>
                    <li><a href="/forum/search" class="<%= currentPage === 'search' ? 'active' : '' %>">üîç Search</a></li>
                    <li><a href="/" class="forum-nav-back">‚Üê Back to Wavelength Lore</a></li>
                </ul>
            </div>
        </nav>
        
        <!-- Main Forum Content -->
        <main class="forum-main">
            <div class="container">
                <!-- Breadcrumb -->
                <div class="forum-breadcrumb">
                    <a href="/forum">Forum</a>
                    <% if (typeof breadcrumbs !== 'undefined' && breadcrumbs.length > 0) { %>
                        <% breadcrumbs.forEach(crumb => { %>
                            <span class="breadcrumb-separator">‚Ä∫</span>
                            <% if (crumb.url) { %>
                                <a href="<%= crumb.url %>"><%= crumb.name %></a>
                            <% } else { %>
                                <span><%= crumb.name %></span>
                            <% } %>
                        <% }); %>
                    <% } %>
                </div>
                
                <!-- Forum Content Area -->
                <div class="forum-content">
                    <%- body %>
                </div>
            </div>
        </main>
        
        <!-- Forum Footer -->
        <footer class="forum-footer">
            <div class="container">
                <div class="forum-footer-content">
                    <div class="forum-stats">
                        <span>Powered by Wavelength Community</span>
                    </div>
                    <div class="forum-links">
                        <a href="/">Return to Wavelength Lore</a>
                        <a href="/forum/guidelines">Community Guidelines</a>
                        <a href="/forum/help">Help</a>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    
    <!-- Forum Modals -->
    <div id="forum-modals"></div>
</body>
</html>