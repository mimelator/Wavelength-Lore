<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/forum.css">
    <link rel="stylesheet" href="/css/styles.css">
    
    <!-- Firebase CDN -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>
    
    <style>
        .forum-search-page {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
        }

        .search-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .search-header h1 {
            color: #333;
            margin-bottom: 10px;
            font-size: 2.5em;
        }

        .search-header p {
            color: #666;
            font-size: 1.1em;
        }

        .search-form-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            margin-bottom: 30px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .search-input-container {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .search-input {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid #ddd;
            border-radius: 6px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 3px rgba(0,123,255,0.25);
        }

        .search-button {
            padding: 12px 24px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: background 0.3s ease;
        }

        .search-button:hover {
            background: #0056b3;
        }

        .search-filters {
            border-top: 1px solid #ddd;
            padding-top: 20px;
        }

        .filter-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .filter-group label {
            font-weight: 600;
            color: #555;
            font-size: 14px;
        }

        .filter-select {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            background: white;
        }

        .filter-select:focus {
            outline: none;
            border-color: #007bff;
        }

        .filter-toggles {
            display: flex;
            gap: 10px;
            justify-content: space-between;
        }

        .toggle-filters-btn, .clear-filters-btn {
            padding: 8px 16px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .toggle-filters-btn:hover, .clear-filters-btn:hover {
            background: #f0f0f0;
        }

        .search-results-section {
            min-height: 300px;
        }

        .search-status {
            margin-bottom: 20px;
            padding: 15px;
            background: #e9ecef;
            border-radius: 6px;
        }

        .search-loading {
            display: flex;
            align-items: center;
            gap: 10px;
            color: #007bff;
        }

        .loading-spinner {
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .search-stats {
            color: #666;
            font-size: 14px;
        }

        .no-results {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .no-results-icon {
            font-size: 4em;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .no-results h3 {
            margin-bottom: 10px;
            color: #333;
        }

        .search-results {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .search-result-item {
            background: white;
            padding: 20px;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .search-result-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .result-title {
            margin: 0 0 10px 0;
            font-size: 1.3em;
            font-weight: 600;
        }

        .result-title a {
            color: #007bff;
            text-decoration: none;
        }

        .result-title a:hover {
            color: #0056b3;
            text-decoration: underline;
        }

        .result-meta {
            display: flex;
            gap: 15px;
            margin-bottom: 10px;
            font-size: 14px;
            color: #666;
        }

        .result-category {
            background: #e9ecef;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
        }

        .result-content {
            color: #333;
            line-height: 1.6;
            margin-bottom: 10px;
        }

        .result-highlight {
            background: #fff3cd;
            padding: 1px 3px;
            border-radius: 2px;
        }

        .result-stats {
            display: flex;
            gap: 15px;
            font-size: 13px;
            color: #666;
        }

        .search-pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
            margin-top: 30px;
            padding: 20px;
        }

        .pagination-btn {
            padding: 10px 20px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .pagination-btn:hover:not(:disabled) {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-info {
            font-weight: 600;
            color: #333;
        }

        .search-suggestions-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            margin-top: 20px;
        }

        .search-suggestions-section h3, .search-suggestions-section h4 {
            color: #333;
            margin-bottom: 15px;
        }

        .suggestion-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 25px;
        }

        .suggestion-tag {
            padding: 8px 16px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .suggestion-tag:hover {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .search-help ul {
            list-style-type: none;
            padding: 0;
        }

        .search-help li {
            padding: 5px 0;
            color: #666;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .forum-search-page {
                padding: 15px;
            }

            .search-input-container {
                flex-direction: column;
            }

            .filter-row {
                grid-template-columns: 1fr;
            }

            .filter-toggles {
                flex-direction: column;
            }

            .search-pagination {
                flex-direction: column;
                gap: 10px;
            }

            .suggestion-tags {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/header') %>
    
    <div class="forum-container">
        <div class="forum-search-page">
            <!-- Search Header -->
            <div class="search-header">
                <h1>üîç Search Forum</h1>
                <p>Find posts, discussions, and topics across the community</p>
            </div>

            <!-- Community Links (visible to all users) -->
            <div class="forum-community-links">
                <h3>Community</h3>
                <div class="community-links-grid">
                    <a href="/forum/search" class="community-link">
                        <span class="link-icon">üîç</span>
                        <span class="link-text">Search Posts</span>
                    </a>
                    <a href="/forum/guidelines" class="community-link">
                        <span class="link-icon">üìã</span>
                        <span class="link-text">Community Guidelines</span>
                    </a>
                    <a href="/forum/recent" class="community-link">
                        <span class="link-icon">‚è∞</span>
                        <span class="link-text">Recent Posts</span>
                    </a>
                    <a href="/forum/popular" class="community-link">
                        <span class="link-icon">üî•</span>
                        <span class="link-text">Popular Posts</span>
                    </a>
                </div>
            </div>

            <!-- Search Form -->
            <div class="search-form-section">
                <form id="forum-search-form" class="search-form">
                    <div class="search-input-container">
                        <input 
                            type="text" 
                            id="search-query" 
                            name="q" 
                            placeholder="Search posts, titles, and content..." 
                            value="<%= searchQuery || '' %>"
                            class="search-input"
                            autocomplete="off"
                        >
                        <button type="submit" class="search-button">
                            <span class="search-icon">üîç</span>
                            Search
                        </button>
                    </div>
                    
                    <!-- Advanced Search Filters -->
                    <div class="search-filters" id="search-filters">
                        <div class="filter-row">
                            <div class="filter-group">
                                <label for="category-filter">Category:</label>
                                <select id="category-filter" name="category" class="filter-select">
                                    <option value="">All Categories</option>
                                    <option value="general">üó£Ô∏è General Discussion</option>
                                    <option value="lore">üìú Lore & Theories</option>
                                    <option value="episodes">üéµ Episode Discussions</option>
                                    <option value="fanart">üé® Fan Creations</option>
                                </select>
                            </div>
                            
                            <div class="filter-group">
                                <label for="sort-filter">Sort by:</label>
                                <select id="sort-filter" name="sort" class="filter-select">
                                    <option value="relevance">Relevance</option>
                                    <option value="date">Newest First</option>
                                    <option value="date-asc">Oldest First</option>
                                    <option value="replies">Most Replies</option>
                                    <option value="views">Most Views</option>
                                </select>
                            </div>
                            
                            <div class="filter-group">
                                <label for="time-filter">Time Range:</label>
                                <select id="time-filter" name="time" class="filter-select">
                                    <option value="">All Time</option>
                                    <option value="day">Last 24 Hours</option>
                                    <option value="week">Last Week</option>
                                    <option value="month">Last Month</option>
                                    <option value="year">Last Year</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="filter-toggles">
                            <button type="button" id="toggle-filters" class="toggle-filters-btn">
                                Advanced Filters <span class="toggle-arrow">‚ñº</span>
                            </button>
                            <button type="button" id="clear-filters" class="clear-filters-btn">
                                Clear All
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Search Results Section -->
            <div class="search-results-section">
                <!-- Search Status -->
                <div id="search-status" class="search-status" style="display: none;">
                    <div id="search-loading" class="search-loading" style="display: none;">
                        <div class="loading-spinner"></div>
                        <span>Searching...</span>
                    </div>
                    
                    <div id="search-stats" class="search-stats" style="display: none;">
                        <span id="results-count">0</span> results found
                        <span id="search-time"></span>
                    </div>
                </div>

                <!-- No Results Message -->
                <div id="no-results" class="no-results" style="display: none;">
                    <div class="no-results-icon">üîç</div>
                    <h3>No results found</h3>
                    <p>Try different keywords or adjust your search filters.</p>
                    <div class="search-suggestions">
                        <h4>Search Tips:</h4>
                        <ul>
                            <li>Use different keywords or phrases</li>
                            <li>Check your spelling</li>
                            <li>Try broader search terms</li>
                            <li>Remove filters to expand results</li>
                        </ul>
                    </div>
                </div>

                <!-- Search Results Container -->
                <div id="search-results" class="search-results">
                    <!-- Results will be populated here -->
                </div>

                <!-- Pagination -->
                <div id="search-pagination" class="search-pagination" style="display: none;">
                    <button id="prev-page" class="pagination-btn" disabled>‚Üê Previous</button>
                    <span id="page-info" class="page-info">Page 1 of 1</span>
                    <button id="next-page" class="pagination-btn" disabled>Next ‚Üí</button>
                </div>
            </div>

            <!-- Search Suggestions (when no query) -->
            <div id="search-suggestions" class="search-suggestions-section">
                <h3>Popular Topics</h3>
                <div class="suggestion-tags">
                    <button class="suggestion-tag" data-query="Shire">Shire</button>
                    <button class="suggestion-tag" data-query="Goblin King">Goblin King</button>
                    <button class="suggestion-tag" data-query="Ice Fortress">Ice Fortress</button>
                    <button class="suggestion-tag" data-query="Wavelength">Wavelength</button>
                    <button class="suggestion-tag" data-query="Lucky">Lucky</button>
                    <button class="suggestion-tag" data-query="theories">theories</button>
                    <button class="suggestion-tag" data-query="episode">episode</button>
                    <button class="suggestion-tag" data-query="lore">lore</button>
                </div>
                
                <div class="search-help">
                    <h4>Search Help</h4>
                    <ul>
                        <li><strong>Simple search:</strong> Enter keywords to find posts</li>
                        <li><strong>Phrase search:</strong> Use quotes for exact phrases: "Goblin King"</li>
                        <li><strong>Category filter:</strong> Narrow results by post category</li>
                        <li><strong>Time filter:</strong> Find recent or historical discussions</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Forum Footer -->
    <footer class="forum-footer">
        <div class="container">
            <div class="forum-footer-content">
                <div class="forum-stats">
                    <span>Wavelength Community Forum</span>
                </div>
                <div class="forum-links">
                    <a href="/">Return to Wavelength Lore</a>
                    <a href="/forum/guidelines">Community Guidelines</a>
                    <a href="/forum/help">Help & Support</a>
                </div>
            </div>
        </div>
    </footer>

    <%- include('../partials/footer') %>

    <!-- Search JavaScript -->
    <script>
        // Search functionality implementation
        let currentPage = 1;
        let currentQuery = '';
        let currentFilters = {};
        let searchTimeout = null;

        document.addEventListener('DOMContentLoaded', function() {
            initializeSearch();
        });

        function initializeSearch() {
            console.log('üîç Initializing forum search...');
            
            // Get initial query from URL if present
            const urlParams = new URLSearchParams(window.location.search);
            const initialQuery = urlParams.get('q') || '';
            
            if (initialQuery) {
                document.getElementById('search-query').value = initialQuery;
                performSearch(initialQuery);
            } else {
                showSearchSuggestions();
            }
            
            setupEventListeners();
        }

        function setupEventListeners() {
            const searchForm = document.getElementById('forum-search-form');
            const searchInput = document.getElementById('search-query');
            const categoryFilter = document.getElementById('category-filter');
            const sortFilter = document.getElementById('sort-filter');
            const timeFilter = document.getElementById('time-filter');
            const toggleFiltersBtn = document.getElementById('toggle-filters');
            const clearFiltersBtn = document.getElementById('clear-filters');
            const prevPageBtn = document.getElementById('prev-page');
            const nextPageBtn = document.getElementById('next-page');

            // Search form submission
            searchForm.addEventListener('submit', function(e) {
                e.preventDefault();
                currentPage = 1;
                performSearch();
            });

            // Real-time search with debounce
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    if (searchInput.value.trim() !== currentQuery) {
                        currentPage = 1;
                        performSearch();
                    }
                }, 500);
            });

            // Filter changes
            [categoryFilter, sortFilter, timeFilter].forEach(filter => {
                filter.addEventListener('change', function() {
                    currentPage = 1;
                    performSearch();
                });
            });

            // Toggle advanced filters
            toggleFiltersBtn.addEventListener('click', function() {
                const filters = document.querySelector('.filter-row');
                const arrow = this.querySelector('.toggle-arrow');
                const isVisible = filters.style.display !== 'none';
                
                filters.style.display = isVisible ? 'none' : 'grid';
                arrow.textContent = isVisible ? '‚ñº' : '‚ñ≤';
                this.textContent = (isVisible ? 'Advanced Filters ' : 'Hide Filters ');
                this.appendChild(arrow);
            });

            // Clear all filters
            clearFiltersBtn.addEventListener('click', function() {
                document.getElementById('search-query').value = '';
                document.getElementById('category-filter').value = '';
                document.getElementById('sort-filter').value = 'relevance';
                document.getElementById('time-filter').value = '';
                currentPage = 1;
                performSearch();
            });

            // Pagination
            prevPageBtn.addEventListener('click', function() {
                if (currentPage > 1) {
                    currentPage--;
                    performSearch();
                }
            });

            nextPageBtn.addEventListener('click', function() {
                currentPage++;
                performSearch();
            });

            // Suggestion tags
            document.querySelectorAll('.suggestion-tag').forEach(tag => {
                tag.addEventListener('click', function() {
                    const query = this.getAttribute('data-query');
                    document.getElementById('search-query').value = query;
                    currentPage = 1;
                    performSearch();
                });
            });
        }

        async function performSearch(queryOverride = null) {
            const query = queryOverride || document.getElementById('search-query').value.trim();
            const category = document.getElementById('category-filter').value;
            const sort = document.getElementById('sort-filter').value;
            const timeFilter = document.getElementById('time-filter').value;

            currentQuery = query;
            currentFilters = { category, sort, timeFilter };

            // Show loading state
            showLoading(true);
            hideSearchSuggestions();

            try {
                // Build search URL
                const params = new URLSearchParams();
                if (query) params.append('q', query);
                if (category) params.append('category', category);
                if (sort) params.append('sort', sort);
                if (timeFilter) params.append('time', timeFilter);
                params.append('page', currentPage.toString());
                params.append('limit', '20');

                const searchUrl = `/forum/api/search?${params.toString()}`;
                console.log('üîç Searching:', searchUrl);

                const response = await fetch(searchUrl);
                const data = await response.json();

                if (data.success) {
                    displaySearchResults(data);
                    updatePagination(data.pagination);
                    updateSearchStats(data);
                    
                    // Update URL without page reload
                    const newUrl = new URL(window.location);
                    if (query) {
                        newUrl.searchParams.set('q', query);
                    } else {
                        newUrl.searchParams.delete('q');
                    }
                    window.history.replaceState({}, '', newUrl);
                } else {
                    console.error('Search failed:', data.error);
                    showError('Search failed. Please try again.');
                }
            } catch (error) {
                console.error('Search error:', error);
                showError('Unable to search. Please check your connection.');
            } finally {
                showLoading(false);
            }
        }

        function displaySearchResults(data) {
            const resultsContainer = document.getElementById('search-results');
            const noResults = document.getElementById('no-results');
            const searchStatus = document.getElementById('search-status');

            if (data.results.length === 0) {
                resultsContainer.innerHTML = '';
                noResults.style.display = 'block';
                searchStatus.style.display = 'none';
            } else {
                noResults.style.display = 'none';
                searchStatus.style.display = 'block';
                
                const resultsHtml = data.results.map(post => createResultItem(post)).join('');
                resultsContainer.innerHTML = resultsHtml;
            }
        }

        function createResultItem(post) {
            const categoryNames = {
                'general': 'üó£Ô∏è General Discussion',
                'lore': 'üìú Lore & Theories',
                'episodes': 'üéµ Episode Discussions',
                'fanart': 'üé® Fan Creations'
            };

            const categoryName = categoryNames[post.category] || post.category || 'Unknown';
            const createdDate = post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'Unknown date';
            const authorName = post.author || 'Anonymous';
            const replyCount = post.replyCount || 0;
            const viewCount = post.views || 0;

            return `
                <div class="search-result-item">
                    <h3 class="result-title">
                        <a href="/forum/post/${post.id}">${post.highlightedTitle || post.title || 'Untitled'}</a>
                    </h3>
                    <div class="result-meta">
                        <span class="result-category">${categoryName}</span>
                        <span>by ${authorName}</span>
                        <span>${createdDate}</span>
                    </div>
                    <div class="result-content">
                        ${post.highlightedContent || post.content || 'No content available'}
                    </div>
                    <div class="result-stats">
                        <span>üí¨ ${replyCount} replies</span>
                        <span>üëÅÔ∏è ${viewCount} views</span>
                    </div>
                </div>
            `;
        }

        function updatePagination(pagination) {
            const paginationContainer = document.getElementById('search-pagination');
            const prevBtn = document.getElementById('prev-page');
            const nextBtn = document.getElementById('next-page');
            const pageInfo = document.getElementById('page-info');

            if (pagination.totalPages > 1) {
                paginationContainer.style.display = 'flex';
                prevBtn.disabled = !pagination.hasPrevPage;
                nextBtn.disabled = !pagination.hasNextPage;
                pageInfo.textContent = `Page ${pagination.page} of ${pagination.totalPages}`;
            } else {
                paginationContainer.style.display = 'none';
            }
        }

        function updateSearchStats(data) {
            const searchStats = document.getElementById('search-stats');
            const resultsCount = document.getElementById('results-count');
            const searchTime = document.getElementById('search-time');

            resultsCount.textContent = data.pagination.total;
            searchTime.textContent = data.query ? ` for "${data.query}"` : '';
            searchStats.style.display = 'block';
        }

        function showLoading(show) {
            const loading = document.getElementById('search-loading');
            const searchStats = document.getElementById('search-stats');
            
            if (show) {
                loading.style.display = 'flex';
                searchStats.style.display = 'none';
            } else {
                loading.style.display = 'none';
            }
        }

        function showError(message) {
            const resultsContainer = document.getElementById('search-results');
            resultsContainer.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #dc3545;">
                    <h3>‚ö†Ô∏è Error</h3>
                    <p>${message}</p>
                </div>
            `;
        }

        function showSearchSuggestions() {
            const suggestionsSection = document.getElementById('search-suggestions');
            const searchResults = document.getElementById('search-results');
            const noResults = document.getElementById('no-results');
            const searchStatus = document.getElementById('search-status');
            
            suggestionsSection.style.display = 'block';
            searchResults.innerHTML = '';
            noResults.style.display = 'none';
            searchStatus.style.display = 'none';
        }

        function hideSearchSuggestions() {
            const suggestionsSection = document.getElementById('search-suggestions');
            suggestionsSection.style.display = 'none';
        }
    </script>
</body>
</html>