{
  "rules": {
    "lore": {
      ".read": true,
      ".write": "auth != null && auth.token.isScript == true"
    },
    "characters": {
      ".read": true,
      ".write": "auth != null && auth.token.isScript == true"
    },
    "episodes": {
      ".read": true,
      ".write": "auth != null && auth.token.isScript == true"
    },
    "videos": {
      ".read": true,
      ".write": "auth != null && auth.token.isScript == true"
    },
    "forum": {
      "categories": {
        ".read": true,
        ".write": "auth != null && auth.token.isScript == true"
      },
      "posts": {
        ".read": true,
        "$postId": {
          ".write": "auth != null && (!data.exists() || data.child('authorId').val() == auth.uid)",
          ".validate": "newData.hasChildren(['title', 'content', 'authorId', 'authorName', 'createdAt', 'forumId'])",
          "title": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 200"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 10000"
          },
          "authorId": {
            ".validate": "newData.val() == auth.uid"
          },
          "authorName": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "forumId": {
            ".validate": "newData.isString() && (newData.val() == 'general' || newData.val() == 'lore' || newData.val() == 'episodes' || newData.val() == 'fanart')"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() == 'discussion' || newData.val() == 'question' || newData.val() == 'theory' || newData.val() == 'fanart' || newData.val() == 'news')"
          },
          "tags": {
            ".validate": "newData.hasChildren()"
          },
          "createdAt": {
            ".validate": "newData.val() <= now"
          },
          "updatedAt": {
            ".validate": "newData.val() <= now"
          },
          "likes": {
            "$userId": {
              ".write": "auth != null && $userId == auth.uid",
              ".validate": "newData.val() == true"
            }
          },
          "likeCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "replyCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "viewCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        }
      },
      "replies": {
        ".read": true,
        "$replyId": {
          ".write": "auth != null && (!data.exists() || data.child('authorId').val() == auth.uid)",
          ".validate": "newData.hasChildren(['content', 'postId', 'authorId', 'authorName', 'createdAt'])",
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 5000"
          },
          "postId": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "authorId": {
            ".validate": "newData.val() == auth.uid"
          },
          "authorName": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "createdAt": {
            ".validate": "newData.val() <= now"
          },
          "likes": {
            "$userId": {
              ".write": "auth != null && $userId == auth.uid",
              ".validate": "newData.val() == true"
            }
          },
          "likeCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        }
      },
      "users": {
        "$userId": {
          ".read": "auth != null && (auth.uid == $userId || auth.token.isScript == true)",
          ".write": "auth != null && auth.uid == $userId",
          ".validate": "newData.hasChildren(['displayName', 'email', 'joinedAt'])",
          "displayName": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
          },
          "email": {
            ".validate": "newData.isString() && newData.val().matches(/^[^@]+@[^@]+\\.[^@]+$/)"
          },
          "avatar": {
            ".validate": "newData.isString()"
          },
          "bio": {
            ".validate": "newData.isString() && newData.val().length <= 500"
          },
          "joinedAt": {
            ".validate": "newData.val() <= now"
          },
          "lastActive": {
            ".validate": "newData.val() <= now"
          },
          "postCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "replyCount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        }
      },
      "settings": {
        ".read": true,
        ".write": "auth != null && auth.token.isScript == true"
      },
      "moderation": {
        ".read": "auth != null && auth.token.isScript == true",
        ".write": "auth != null && auth.token.isScript == true"
      }
    },
    "analytics": {
      ".read": "auth != null && auth.token.isScript == true",
      ".write": "auth != null && auth.token.isScript == true"
    }
  }
}